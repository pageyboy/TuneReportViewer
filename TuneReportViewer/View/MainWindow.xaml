<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="TuneReportViewer.MainWindow"
        mc:Ignorable="d"
        Title="Tune Report Viewer" Height="646.704" Width="1084.076" MinWidth="800" MinHeight="400">
    <DockPanel Background="#0d8ad7">
        <DockPanel DockPanel.Dock="Top" Background="#0d8ad7" Height="35">
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Margin="5" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Text="Timespan"/>
                <ComboBox Name="combBox_TimeSpan" FontWeight="Bold" Margin="5" SelectedIndex="5" VerticalAlignment="Center" Width="80" Background="White" Style="{DynamicResource ComboBoxStyle1}">
                    <ComboBox.Resources>
                        <Style x:Key="FocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="White" Offset="0.0"/>
                            <GradientStop Color="White" Offset="1.0"/>
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
                        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
                        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
                        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
                        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
                        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
                        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
                            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
                        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
                        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
                        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
                            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
                        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
                        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
                            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
                        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
                        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
                        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
                            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
                        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
                        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
                        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
                        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
                        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
                        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
                        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
                        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
                        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="ClickMode" Value="Press"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
                        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="AllowDrop" Value="true"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="Padding" Value="6,3,5,3"/>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                            <Style.Triggers>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter Property="Padding" Value="2"/>
                                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Resources>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="BorderBrush" Value="White"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <ComboBoxItem Content="1 month"/>
                    <ComboBoxItem Content="3 months"/>
                    <ComboBoxItem Content="6 months"/>
                    <ComboBoxItem Content="9 months"/>
                    <ComboBoxItem Content="1 year"/>
                    <ComboBoxItem Content="All"/>
                </ComboBox>
                <TextBlock Margin="5" Text="From" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" />
                <DatePicker Name="dtp_FromDate" Margin="5" VerticalAlignment="Center" FontWeight="Bold" />
                <TextBlock Margin="5" Text="To" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" />
                <DatePicker Name="dtp_ToDate" Margin="5" VerticalAlignment="Center" FontWeight="Bold"/>
            </StackPanel>
            <DockPanel DockPanel.Dock="Right" Height="30">
                <Button DockPanel.Dock="Right" Margin="5" Click="btn_BrowseClicked" Height="20" Width="100" Background="White">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock ><Run Text="Browse to Folder"/></TextBlock>
                    </StackPanel>
                </Button>
                <TextBox x:Name="txtBox_FolderPath" Margin="5" DockPanel.Dock="Left" VerticalContentAlignment="Center"/>
            </DockPanel>
        </DockPanel>
        <DockPanel DockPanel.Dock="Bottom" Background="#0d8ad7" Height="Auto" VerticalAlignment="Center">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" HorizontalAlignment="Left"/>
                <UniformGrid Grid.Column="1" Rows="1" VerticalAlignment="Center">
                    <Button Margin="5" Click="btn_SearchClicked" Background="White">
                        <DockPanel>
                            <TextBlock VerticalAlignment="Center" DockPanel.Dock="Left" Text="Search"/>
                        </DockPanel>
                    </Button>
                    <Button Margin="5" Content="Export" Click="btn_ExportClicked" Background="White"/>
                </UniformGrid>
            </Grid>
        </DockPanel>
        <DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <DockPanel DockPanel.Dock="Top" Height="35" Background="#0d8ad7" >
                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                        <TextBlock Margin="5,5,30,5" Text="TABLE DISPLAY OPTIONS  " VerticalAlignment="Center" FontWeight="Bold" Foreground="White"/>
                        <RadioButton GroupName="Polarity" Click="Filter_Click" Name="radBtn_Pos" IsChecked="True" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Positive</RadioButton>
                        <RadioButton GroupName="Polarity" Click="Filter_Click" Name="radBtn_Neg" VerticalAlignment="Center" FontWeight="Bold" Foreground="White"  Margin="0, 0, 25, 0">Negative</RadioButton>
                        <CheckBox Click="Filter_Click" Name="chkBox_Filter" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" IsChecked="True" Margin="0, 0, 25, 0">Filter Failed Tunes</CheckBox>
                        <RadioButton GroupName="Resolution" Click="Filter_Click" Name="radBtn_Res1" IsChecked="True" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Resolution 1</RadioButton>
                        <RadioButton GroupName="Resolution" Click="Filter_Click" Name ="radBtn_Res2" VerticalAlignment="Center" FontWeight="Bold" Foreground="White"  Margin="0, 0, 25, 0">Resolution 2</RadioButton>
                        <RadioButton GroupName="Resolution" Click="Filter_Click" Name="radBtn_Res3" IsChecked="True" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Resolution 3</RadioButton>
                    </StackPanel>
                </DockPanel>
                <DockPanel DockPanel.Dock="Bottom" Height="35" Background="#0d8ad7">
                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                        <TextBlock Margin="5,5,30,5" Text="GRAPH DISPLAY OPTIONS" VerticalAlignment="Center" FontWeight="Bold" Foreground="White"/>
                        <CheckBox Name="chkBox_Abundance" Click="GraphFilter_Click" IsChecked="True" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Abundance</CheckBox>
                        <RadioButton GroupName="Mass" Name="radBtn_Mass1" Click="GraphFilter_Click" IsChecked="True" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Mass 1</RadioButton>
                        <RadioButton GroupName="Mass" Name="radBtn_Mass2" Click="GraphFilter_Click" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Mass 2</RadioButton>
                        <RadioButton GroupName="Mass" Name="radBtn_Mass3" Click="GraphFilter_Click" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Mass 3</RadioButton>
                        <RadioButton GroupName="Mass" Name="radBtn_Mass4" Click="GraphFilter_Click" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Mass 4</RadioButton>
                        <RadioButton GroupName="Mass" Name="radBtn_Mass5" Click="GraphFilter_Click" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Mass 5</RadioButton>
                        <RadioButton GroupName="Mass" Name="radBtn_Mass6" Click="GraphFilter_Click" VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Margin="0, 0, 25, 0">Mass 6</RadioButton>
                        <CheckBox Name="chkBox_EMV" Click="GraphFilter_Click" VerticalAlignment="Center" FontWeight="Bold" Foreground="White"  Margin="0, 0, 25, 0">EMV</CheckBox>
                    </StackPanel>
                </DockPanel>
            </DockPanel>
            <DockPanel Height="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="322*"/>
                        <ColumnDefinition Width="216*"/>
                        <ColumnDefinition Width="2"/>
                        <ColumnDefinition Width="273*"/>
                        <ColumnDefinition Width="264*"/>
                    </Grid.ColumnDefinitions>
                    <ListView Margin="10" Name="DataTable" Grid.ColumnSpan="2">
                        <ListView.Resources>
                            <DataTemplate x:Key="FirstCell">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox HorizontalAlignment="Center" IsChecked="True"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Include in Chart" CellTemplate="{StaticResource FirstCell}" Width="30"/>
                                <GridViewColumn Header="Autotune Date/Time" DisplayMemberBinding="{Binding tuneDateTime, StringFormat='yyyy-MMM-dd HH:mm:ss'}" />
                                <GridViewColumn Header="Pass Status" DisplayMemberBinding="{Binding passStatus, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="Type" DisplayMemberBinding="{Binding tuneType, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="Pos EMV" Width="50" DisplayMemberBinding="{Binding posemv, StringFormat='{}{0:0;;#;NaN}'}" />
                                <GridViewColumn Header="Neg EMV" Width="150" DisplayMemberBinding="{Binding negemv, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS1 Mass 1" Width="100" DisplayMemberBinding="{Binding ms1_1, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS1 Mass 2" Width="100" DisplayMemberBinding="{Binding ms1_2, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS1 Mass 3" Width="100" DisplayMemberBinding="{Binding ms1_3, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS1 Mass 4" Width="100" DisplayMemberBinding="{Binding ms1_4, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS1 Mass 5" Width="100" DisplayMemberBinding="{Binding ms1_5, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS1 Mass 6" Width="100" DisplayMemberBinding="{Binding ms1_6, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS2 Mass 1" Width="100" DisplayMemberBinding="{Binding ms2_1, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS2 Mass 2" Width="100" DisplayMemberBinding="{Binding ms2_2, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS2 Mass 3" Width="100" DisplayMemberBinding="{Binding ms2_3, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS2 Mass 4" Width="100" DisplayMemberBinding="{Binding ms2_4, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS2 Mass 5" Width="100" DisplayMemberBinding="{Binding ms2_5, StringFormat='{}{0:0;;#}'}" />
                                <GridViewColumn Header="MS2 Mass 6" Width="100" DisplayMemberBinding="{Binding ms2_6, StringFormat='{}{0:0;;#}'}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <GridSplitter Grid.Column="2" Width="5" HorizontalAlignment="Stretch" Margin="0,0,0,0" />
                    <Grid Margin="10" Grid.Column="3" Grid.ColumnSpan="2">
                        <Grid.Resources>
                            <Style x:Key="CleanSeparator" TargetType="lvc:Separator">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </Style>
                        </Grid.Resources>
                        <lvc:CartesianChart Background="White" Series="{Binding SeriesCollection}" LegendLocation="Right">
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis MinValue="0" Foreground="DodgerBlue" Title="Abundance"/>
                                <lvc:Axis MinValue="600" Foreground="LightBlue" Title="EMV (Volts)" Position="RightTop">
                                    <lvc:Axis.Separator>
                                        <lvc:Separator Style="{StaticResource CleanSeparator}"></lvc:Separator>
                                    </lvc:Axis.Separator>
                                </lvc:Axis>
                            </lvc:CartesianChart.AxisY>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Title="Date" Labels="{Binding Labels}" LabelFormatter="{Binding Formatter}"></lvc:Axis>
                            </lvc:CartesianChart.AxisX>
                        </lvc:CartesianChart>
                    </Grid>
                </Grid>
            </DockPanel>
        </DockPanel>
    </DockPanel>
</Window>
